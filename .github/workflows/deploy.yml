on:
  push:
    tags:
      - "v*"
name: Test and Release
jobs:
  npm-test:
    name: JavaScript Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2.1.5
      - name: Install dependencies
        run: yarn
      - name: Run Tests
        run: yarn test
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Go Tests with Coverage
        run: make test SKIP_ASSET=1
  int-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build images
        run: docker-compose -f integration/docker-compose.test.yml build
      - name: Run tests
        run: docker-compose -f integration/docker-compose.test.yml run integration
  buildx:
    needs: [go-test, npm-test, int-test]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: amir20/dozzle
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha
  git-release:
    needs: [buildx]
    name: Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Node
        uses: actions/setup-node@v2.1.5
      - name: Install dependencies
        run: yarn
      - name: Release to Github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release --github.release --no-increment --no-git --ci
