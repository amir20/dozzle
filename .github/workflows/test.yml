on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: Test
jobs:
  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Install Node
        with:
          node-version: latest
      - run: corepack enable
      - run: pnpm --version
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Run Typecheck
        run: pnpm run typecheck
  npm-test:
    name: JavaScript Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Install Node
        with:
          node-version: latest
      - run: corepack enable
      - run: pnpm --version
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Run Tests
        run: pnpm run test -- --outputTruncateLength=500
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Go Tests with Coverage
        run: make test SKIP_ASSET=1
  int-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Login to DockerHub
        if: ${{ !github.event.repository.fork && !github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/bake-action@v2
        with:
          workdir: e2e
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
      - name: Push images
        if: ${{ !github.event.repository.fork && !github.event.pull_request.head.repo.fork }}
        uses: docker/bake-action@v2
        with:
          push: true
          workdir: e2e
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
      - name: Set commit message for push
        if: github.event_name == 'push'
        run: |
          echo "GIT_LOG_MESSAGE<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B ${GITHUB_SHA} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Set commit message for pull request
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_LOG_MESSAGE<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B ${{github.event.pull_request.head.sha}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Run tests
        run: docker compose -f e2e/docker-compose.yml up --force-recreate --exit-code-from cypress
